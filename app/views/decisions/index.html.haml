%header.page-header.group
  %h1
    %span Information
    Immigration and asylum appeal decisions
  %p
    Search for judges' decisions on appeals to the Upper Tribunal (Immigration and Asylum Chamber).
= form_tag decisions_path, :method => :get, :class => 'search_form' do
  .input-append
    %label{:for => "search_query"} Enter a case number, appellant or judge name, country or keyword
    = text_field :search, :query, :value => params[:search][:query], :placeholder => "eg UKUT 211 or Judge Allen"
    = button_tag "Clear", :class => "button", :type => "reset"
    %button.button.primary{:type => "submit"} Search

  %p.sub
    Email
    %a{href: 'mailto:utiacdecisions@hmcts.gsi.gov.uk'}='utiacdecisions@hmcts.gsi.gov.uk'
    if you want a copy of an unreported decision from before 1 June 2013.

  .pagination-row
    .page-entries
      = page_entries_info @decisions
    = will_paginate @decisions

  .main.cf
    .advanced-search
      %fieldset#advanced_search
        %h2 Filter the results
        %h3 Case status
        .status-filter
          %label.checkbox.inline
            = radio_button :search, :reported, "all", checked: true
            All
          %label.checkbox.inline
            = radio_button :search, :reported, "true"
            Reported
          %label.checkbox.inline
            = radio_button :search, :reported, "false"
            Unreported
        #search_reported_only
          %h3
            %label Neutral citation number
          = text_field :search, :ncn, :value => params[:search][:ncn]
          %h3
            %label Country
          = select :search, :country, options_for_select([[]] + Decision.country_list, params[:search][:country])
          %label.checkbox
            = check_box :search, :country_guideline, :value => params[:search][:country_guideline]
            Used as country guidance
          %h3
            %label Name of judge
          = select :search, :judge, options_for_select([[]] + Decision.judges_list, params[:search][:judge])
          %h3
            %label Appellant name
          = text_field :search, :claimant, :value => params[:search][:claimant]
        .buttons
          = button_tag "Clear", :class => "button left", :type => "reset"
          = submit_tag "Search", :class => "button right primary"
    .decisions
      %table.decisions-table
        %tr.headings
          %th Reference number
          %th Status
          %th Promulgation date
          %th Country
        - @decisions.each do |decision, group = cycle('even', 'odd')|
          %tr.first{:class => group}
            %td{class: decision.reported ? 'reported' : 'unreported' }= link_to decision.link_label, decision_path(decision)
            %td
              - if reported_label(decision.reported?) == "Yes"
                Reported
              - else
                Unreported
            / %td hearingdate
            %td.date= time_element(decision.promulgated_on)
            %td= decision.country
          - if decision.case_title
            %tr{:class => group + (search_present() ? '' : ' last')}
              %td{:colspan => 4}
                Case title:
                %strong= decision.case_title
          - if search_present()
            %tr.last{:class => group}
              %td{:colspan => 4}
                %strong Search result:
                = decision.text
                -#= hilighted_search_result(params[:search][:query], decision.text)

  .pagination-row.bottom
    .page-entries
      = page_entries_info @decisions
    = will_paginate @decisions

